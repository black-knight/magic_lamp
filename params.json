{
  "name": "Interactive Tabletop Project:ed",
  "tagline": "",
  "body": "Interactive Tabletop Project:ed\r\n===============================\r\n\r\nInteractive Tabletop Project:ed is a framework for creating interactive, digital tabletop projects, focusing mainly on board games played with physical bricks. It provides a JavaScript client API for easy content creation.\r\n\r\nA working prototype setup consisting of a portable projector and a Raspberry Pi with attached camera module can be seen below. Further info can be found on the github page.\r\n\r\n![MAZE game](https://raw.githubusercontent.com/daniel-andersen/Interactive-Tabletop-Projected/master/Photos/maze_1.jpg)\r\n\r\nGetting up and running\r\n======================\r\n\r\nThe computer vision backend is written in Python/OpenCV and communicates with the webpage through WebSockets.\r\n\r\nGiven you have Python and OpenCV installed, getting up and running is as simple as starting the backend server:\r\n\r\n    $ cd Server/src\r\n    $ python main.py\r\n\r\nand referencing the client library in a web page and initializing it as follows (CoffeeScript source):\r\n\r\n    @client = new Client()\r\n    @client.connect((() => @onConnected()), ((json) => @onMessage(json)))\r\n\r\n    onConnected: ->\r\n        @client.reset()\r\n\r\n    onMessage: (json) ->\r\n        switch json[\"action\"]\r\n            ...\r\n\r\nTo create a tiled board of size (32, 20) and wait for a brick to be found in any of the top/left corner tiles implement the following few lines:\r\n\r\n    onMessage: (json) ->\r\n        switch json[\"action\"]\r\n            when \"reset\" then @client.initializeBoard()\r\n            when \"initializeBoard\" then @client.initializeTiledBoardArea(32, 20, 0.0, 0.0, 1.0, 1.0, 0)\r\n            when \"initializeTiledBoardArea\" then @client.reportBackWhenBrickFoundAtAnyOfPositions(0, ([0, 0], [1, 0], [1, 0]))\r\n            when \"brickFoundAtPosition\" then alert(\"Brick found at position: \" + json[\"payload\"][\"position\"])\r\n\r\nSee Content/MAZE for a complete reference implementation of a simple MAZE game.\r\n\r\nPhotos\r\n======\r\n\r\n![Magic Lamp](https://raw.githubusercontent.com/daniel-andersen/Interactive-Tabletop-Projected/master/Photos/lamp_1.jpg)\r\n![Magic Lamp](https://raw.githubusercontent.com/daniel-andersen/Interactive-Tabletop-Projected/master/Photos/lamp_2.jpg)\r\n\r\n![Magic Lamp](https://raw.githubusercontent.com/daniel-andersen/Interactive-Tabletop-Projected/master/Photos/lamp_3.jpg)\r\n![Magic Lamp](https://raw.githubusercontent.com/daniel-andersen/Interactive-Tabletop-Projected/master/Photos/lamp_4.jpg)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}